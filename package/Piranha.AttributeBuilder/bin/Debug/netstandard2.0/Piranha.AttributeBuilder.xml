<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Piranha.AttributeBuilder</name>
    </assembly>
    <members>
        <member name="T:Piranha.AttributeBuilder.ContentTypeAttribute">
            <summary>
            Attribute for marking a class as a content type.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.ContentTypeAttribute.UseExcerpt">
            <summary>
            Gets/sets if excerpt should be used for the
            content type. The default value is true.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.ContentTypeAttribute.UsePrimaryImage">
            <summary>
            Gets/sets if primary image should be used for the
            content type. The default value is true.
            </summary>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeAttribute.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.ContentTypeBaseAttribute">
            <summary>
            Abstract class for building content types.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.ContentTypeBaseAttribute.Id">
            <summary>
            Gets/sets the unique id.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.ContentTypeBaseAttribute.Title">
            <summary>
            Gets/sets the optional title.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.ContentTypeBuilder">
            <summary>
            Class for simple access to the different content type
            builders available.
            </summary>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeBuilder.#ctor(Piranha.IApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="api">The current api</param>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeBuilder.AddAssembly(System.Reflection.Assembly)">
            <summary>
            Adds all content types available in the given assembly.
            </summary>
            <param name="assembly">The assembly</param>
            <returns>The builder</returns>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeBuilder.AddType(System.Type)">
            <summary>
            Adds a new type to build content types from.
            </summary>
            <param name="type">The type</param>
            <returns>The builder</returns>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeBuilder.Build">
            <summary>
            Builds all of the content types and saves them to the
            database.
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeBuilder.BuildAsync">
            <summary>
            Builds all of the content types and saves them to the
            database.
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeBuilder.DeleteOrphans">
            <summary>
            Deletes all content types that does not currently exist in
            the builder.
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeBuilder.DeleteOrphansAsync">
            <summary>
            Deletes all content types that does not currently exist in
            the builder.
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="T:Piranha.AttributeBuilder.ContentTypeEditorAttribute">
            <summary>
            Base class for content type editor attributes.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.ContentTypeEditorAttribute.Component">
            <summary>
            Gets/sets the editor component.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.ContentTypeEditorAttribute.Icon">
            <summary>
            Gets/sets the optional icon css.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.ContentTypeEditorAttribute.Title">
            <summary>
            Gets/sets the title.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.ContentTypeRouteAttribute">
            <summary>
            Attribute for marking a class as a content type.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.ContentTypeRouteAttribute.Title">
            <summary>
            Gets/sets the display title.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.ContentTypeRouteAttribute.Route">
            <summary>
            Gets/sets the internal route.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.ContentTypeBuilder`2">
            <summary>
            Abstract base class for importing a content type from attributes.
            </summary>
            <typeparam name="T">The builder type</typeparam>
            <typeparam name="TType">The content type</typeparam>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeBuilder`2.AddType(System.Type)">
            <summary>
            Adds a new type to build page types from
            </summary>
            <param name="type">The type</param>
            <returns>The builder</returns>
        </member>
        <member name="M:Piranha.AttributeBuilder.ContentTypeBuilder`2.Build">
            <summary>
            Builds the page types.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.PageTypeBuilder">
            <summary>
            Class for building and importing page types.
            </summary>
        </member>
        <member name="M:Piranha.AttributeBuilder.PageTypeBuilder.#ctor(Piranha.IApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="api">The current api</param>
        </member>
        <member name="T:Piranha.AttributeBuilder.PageTypeEditorAttribute">
            <summary>
            Attribute for adding a custom editor to a page type.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.PageTypeRouteAttribute">
            <summary>
            Attribute for adding a route to a page type.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.PostTypeBuilder">
            <summary>
            Class for building and importing post types.
            </summary>
        </member>
        <member name="M:Piranha.AttributeBuilder.PostTypeBuilder.#ctor(Piranha.IApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="api">The current api</param>
        </member>
        <member name="T:Piranha.AttributeBuilder.PostTypeEditorAttribute">
            <summary>
            Attribute for adding a custom editor to a post type.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.PostTypeRouteAttribute">
            <summary>
            Attribute for adding a route to a post type.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.SiteTypeBuilder">
            <summary>
            Class for building and importing site types.
            </summary>
        </member>
        <member name="M:Piranha.AttributeBuilder.SiteTypeBuilder.#ctor(Piranha.IApi)">
            <summary>
            Default constructor.
            </summary>
            <param name="api">The current api</param>
        </member>
        <member name="T:Piranha.AttributeBuilder.PageTypeArchiveItemAttribute">
            <summary>
            Attribute for adding a route to a page type.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.PageTypeArchiveItemAttribute.PostType">
            <summary>
            Gets/sets the allowed post type.
            </summary>
        </member>
        <member name="M:Piranha.AttributeBuilder.PageTypeArchiveItemAttribute.#ctor(System.Type)">
            <summary>
            Default constructor.
            </summary>
            <param name="type">The allowed post type</param>
        </member>
        <member name="T:Piranha.AttributeBuilder.PageTypeAttribute">
            <summary>
            Attribute for marking a class as a page type.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.PageTypeAttribute.IsArchive">
            <summary>
            Gets/sets if this page type should be used as
            an archive.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.PageTypeAttribute.UseBlocks">
            <summary>
            Gets/sets if the page type should use the block editor
            for its main content. The default value is True.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.PageTypeAttribute.UsePrimaryImage">
            <summary>
            Gets/sets if primary image should be used for the
            post type. The default value is true.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.PageTypeAttribute.UseExcerpt">
            <summary>
            Gets/sets if excerpt should be used for the
            post type. The default value is true.
            </summary>
        </member>
        <member name="M:Piranha.AttributeBuilder.PageTypeAttribute.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.PostTypeAttribute">
            <summary>
            Attribute for marking a class as a page type.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.PostTypeAttribute.UseBlocks">
            <summary>
            Gets/sets if the post type should use the block editor
            for its main content. The default value is True.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.PostTypeAttribute.UsePrimaryImage">
            <summary>
            Gets/sets if primary image should be used for the
            post type. The default value is true.
            </summary>
        </member>
        <member name="P:Piranha.AttributeBuilder.PostTypeAttribute.UseExcerpt">
            <summary>
            Gets/sets if excerpt should be used for the
            post type. The default value is true.
            </summary>
        </member>
        <member name="M:Piranha.AttributeBuilder.PostTypeAttribute.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Piranha.AttributeBuilder.SiteTypeAttribute">
            <summary>
            Attribute for marking a class as a page type.
            </summary>
        </member>
        <member name="M:Piranha.AttributeBuilder.SiteTypeAttribute.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
    </members>
</doc>
